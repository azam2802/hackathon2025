import React from 'react'
import './Dashboard.scss'
import { useFetchAnalytics } from '../../Hooks/useFetchAnalytics';
import { useFetchComplaints } from '../../Hooks/useFetchComplaints';
import AgencyChart from '../../Components/Charts/AgencyChart';
import ServiceTypeChart from '../../Components/Charts/ServiceTypeChart';
import { useNavigate } from 'react-router-dom';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
const parseDate = (dateString) => {
  if (!dateString) return null;
  
  let parsedDate;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã "dd.MM.YYYY HH:mm"
  if (dateString.includes('.')) {
    const [datePart, timePart] = dateString.split(' ');
    const [day, month, year] = datePart.split('.').map(num => parseInt(num, 10));
    
    if (timePart) {
      const [hours, minutes] = timePart.split(':').map(num => parseInt(num, 10));
      parsedDate = new Date(year, month - 1, day, hours, minutes);
    } else {
      parsedDate = new Date(year, month - 1, day);
    }
  } 
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã "dd-MM-YYYY" –∏–ª–∏ "YYYY-MM-DD"
  else if (dateString.includes('-')) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ ISO —Ñ–æ—Ä–º–∞—Ç–æ–º (YYYY-MM-DD)
    const parts = dateString.split('-');
    if (parts.length === 3) {
      // –ï—Å–ª–∏ –ø–µ—Ä–≤–∞—è —á–∞—Å—Ç—å - –≥–æ–¥ (4 —Ü–∏—Ñ—Ä—ã)
      if (parts[0].length === 4) {
        // ISO —Ñ–æ—Ä–º–∞—Ç (YYYY-MM-DD)
        const [year, month, day] = parts.map(num => parseInt(num, 10));
        parsedDate = new Date(year, month - 1, day);
      } else {
        // –ù–∞—à —Ñ–æ—Ä–º–∞—Ç (DD-MM-YYYY)
        const [day, month, year] = parts.map(num => parseInt(num, 10));
        parsedDate = new Date(year, month - 1, day);
      }
    }
  }
  // –ü—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –¥–ª—è ISO –∏ –¥—Ä—É–≥–∏—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
  else {
    parsedDate = new Date(dateString);
    if (isNaN(parsedDate.getTime())) {
      return null;
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–∞—Ç—ã
  if (!parsedDate || isNaN(parsedDate.getTime())) {
    return null;
  }
  
  return parsedDate;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–∫–ª–æ–Ω–µ–Ω–∏—è —Å–ª–æ–≤–∞ "–¥–µ–Ω—å"
const formatDays = (days) => {
  const lastDigit = days % 10;
  const lastTwoDigits = days % 100;
  
  if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {
    return `${days} –¥–Ω–µ–π`;
  }
  
  if (lastDigit === 1) {
    return `${days} –¥–µ–Ω—å`;
  }
  
  if (lastDigit >= 2 && lastDigit <= 4) {
    return `${days} –¥–Ω—è`;
  }
  
  return `${days} –¥–Ω–µ–π`;
};

const Dashboard = () => {
  const navigate = useNavigate();
  const { 
    reportsCount, 
    resolvedCount, 
    avgResolutionTime, 
    problemServices, 
    problemServicesList, 
    serviceTypeDistribution,
    monthlyReports,
    loading: analyticsLoading, 
    error: analyticsError, 
    refreshData: refreshAnalytics 
  } = useFetchAnalytics();
  
  const {
    stats,
    loading: complaintsLoading,
    error: complaintsError,
    refreshData: refreshComplaints
  } = useFetchComplaints();
  
  const loading = analyticsLoading || complaintsLoading;
  const error = analyticsError || complaintsError;
  
  const refreshData = () => {
    refreshAnalytics();
    refreshComplaints();
  };
  
  const navigateToComplaints = (filter) => {
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É Complaints —Å –Ω—É–∂–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–æ–º
    navigate('/complaints', { state: { filter } });
  };

  return (
    <div className="dashboard-page fade-in">
      <div className="page-title" data-aos="fade-down">
        <h1>–î–∞—à–±–æ—Ä–¥ –∞–Ω–∞–ª–∏–∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π –≥—Ä–∞–∂–¥–∞–Ω</h1>
        <div className="actions">
          <button className="btn btn-primary">–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç</button>
          <button className="btn btn-outline">–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</button>
          <button 
            className="btn btn-refresh" 
            onClick={refreshData} 
            disabled={loading}
          >
            {loading ? '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...' : '–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'}
          </button>
        </div>
      </div>
      
      <div className="filters-bar" data-aos="fade-up" data-aos-delay="100">
        <div className="search-input">
          <span className="search-icon">üîç</span>
          <input type="text" placeholder="–ü–æ–∏—Å–∫ –ø–æ —É—Å–ª—É–≥–∞–º –∏ –æ–±—Ä–∞—â–µ–Ω–∏—è–º..." />
        </div>
        
        <div className="filter-controls">
          <div className="filter-dropdown">
            <select defaultValue="">
              <option value="" disabled>–ü–µ—Ä–∏–æ–¥</option>
              <option value="7d">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π</option>
              <option value="30d">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π</option>
              <option value="90d">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 90 –¥–Ω–µ–π</option>
              <option value="1y">–ì–æ–¥</option>
            </select>
          </div>
          
          <div className="filter-dropdown">
            <select defaultValue="">
              <option value="" disabled>–†–µ–≥–∏–æ–Ω</option>
              <option value="all">–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã</option>
              <option value="msk">–ú–æ—Å–∫–≤–∞</option>
              <option value="spb">–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥</option>
              <option value="nsk">–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫</option>
              <option value="ekb">–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥</option>
            </select>
          </div>
        </div>
      </div>
      
      {error && (
        <div className="error-message" data-aos="fade-in">
          –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {error}
        </div>
      )}
      
      <div className="dashboard-cards">
        <div className="card" data-aos="zoom-in" data-aos-delay="200">
          <div className="card-title">–í—Å–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏–π</div>
          <div className="card-value">{loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : reportsCount.toLocaleString()}</div>
        </div>
        
        <div className="card" data-aos="zoom-in" data-aos-delay="300">
          <div className="card-title">–†–µ—à–µ–Ω–Ω—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è</div>
          <div className="card-value">{loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : resolvedCount.toLocaleString()}</div>
        </div>
        
        <div className="card" data-aos="zoom-in" data-aos-delay="400">
          <div className="card-title">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Ä–µ—à–µ–Ω–∏—è</div>
          <div className="card-value">
            {loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : avgResolutionTime === 0 
              ? '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö' 
              : formatDays(avgResolutionTime)
            }
          </div>
        </div>
        
        <div className="card overdue-card" data-aos="zoom-in" data-aos-delay="500" onClick={() => navigateToComplaints('overdue')}>
          <div className="card-title">–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è</div>
          <div className="card-value">
            {loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : (
              <span className={stats.overdue > 0 ? 'alert-value' : ''}>{stats.overdue}</span>
            )}
          </div>
          {stats.overdue > 0 && <div className="card-badge">–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è</div>}
        </div>
        
        <div className="card problem-card" data-aos="zoom-in" data-aos-delay="600">
          <div className="card-title">–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —É—Å–ª—É–≥–∏</div>
          <div className="card-value">{loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : problemServices}</div>
        </div>
      </div>
      
      {stats.overdue > 0 && (
        <div className="dashboard-section" data-aos="fade-up" data-aos-delay="300">
          <h2 className="section-title">–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è</h2>
          <div className="section-subtitle">
            –û–±—Ä–∞—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –±–æ–ª–µ–µ –º–µ—Å—è—Ü–∞
          </div>
          
          <table className="data-table alert-table">
            <thead>
              <tr>
                <th>ID</th>
                <th>–û–±—Ä–∞—â–µ–Ω–∏–µ</th>
                <th>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</th>
                <th>–°—Ä–æ–∫</th>
                <th>–£—Å–ª—É–≥–∞</th>
                <th>–î–µ–π—Å—Ç–≤–∏—è</th>
              </tr>
            </thead>
            <tbody>
              {stats.overdueList.slice(0, 5).map((complaint, index) => {
                // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º, —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –ø—Ä–æ—à–ª–æ —Å –º–æ–º–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
                let daysPassed = 0;
                if (complaint.created_at) {
                  const createdDate = parseDate(complaint.created_at);
                  if (createdDate) {
                    const today = new Date();
                    daysPassed = Math.floor((today - createdDate) / (1000 * 60 * 60 * 24));
                  }
                }
                
                return (
                  <tr key={complaint.id} data-aos="fade-up" data-aos-delay={100 + (index * 100)}>
                    <td>#{complaint.id.substring(0, 5)}</td>
                    <td>{complaint.report_text?.substring(0, 40)}{complaint.report_text?.length > 40 ? '...' : ''}</td>
                    <td>{complaint.created_at}</td>
                    <td className="days-overdue">{formatDays(daysPassed)}</td>
                    <td>{complaint.service}</td>
                    <td>
                      <button className="btn btn-sm btn-warning" onClick={() => navigate(`/complaints?id=${complaint.id}`)}>
                        –û–±—Ä–∞–±–æ—Ç–∞—Ç—å
                      </button>
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
          
          {stats.overdue > 5 && (
            <div className="view-all-link">
              <button 
                className="btn btn-outline" 
                onClick={() => navigateToComplaints('overdue')}
              >
                –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ ({stats.overdue})
              </button>
            </div>
          )}
        </div>
      )}
      
      <div className="charts-container">
        <div className="chart-card" data-aos="fade-right" data-aos-delay="300">
          <div className="chart-title">
            <span>–î–∏–Ω–∞–º–∏–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π –ø–æ –≤–µ–¥–æ–º—Å—Ç–≤–∞–º</span>
          </div>
          <AgencyChart monthlyReports={monthlyReports} loading={loading} />
        </div>
        
        <div className="chart-card" data-aos="fade-left" data-aos-delay="400">
          <div className="chart-title">
            <span>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∏–ø–∞–º —É—Å–ª—É–≥</span>
          </div>
          <ServiceTypeChart serviceTypeDistribution={serviceTypeDistribution} loading={loading} />
        </div>
      </div>
      
      <div className="dashboard-section" data-aos="fade-up" data-aos-delay="500">
        <h2 className="section-title">–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —É—Å–ª—É–≥–∏</h2>
        <div className="section-subtitle">
          –£—Å–ª—É–≥–∏ —Å –±–æ–ª–µ–µ —á–µ–º 30 –æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
        </div>
        
        {loading ? (
          <div className="loading-indicator">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>
        ) : problemServicesList && problemServicesList.length > 0 ? (
          <table className="data-table">
            <thead>
              <tr>
                <th>–ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏</th>
                <th>–í–µ–¥–æ–º—Å—Ç–≤–æ</th>
                <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞—â–µ–Ω–∏–π</th>
                <th>–°—Ç–∞—Ç—É—Å</th>
                <th>–î–µ–π—Å—Ç–≤–∏—è</th>
              </tr>
            </thead>
            <tbody>
              {problemServicesList.map((item, index) => (
                <tr key={index} data-aos="fade-up" data-aos-delay={100 + (index * 100)}>
                  <td>{item.service}</td>
                  <td>{item.agency}</td>
                  <td>{item.count}</td>
                  <td>
                    <span className={`status ${item.count > 100 ? 'critical' : item.count > 50 ? 'warning' : 'normal'}`}>
                      {item.count > 100 ? '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π' : item.count > 50 ? '–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è' : '–ù–æ—Ä–º–∞–ª—å–Ω—ã–π'}
                    </span>
                  </td>
                  <td><button className="btn btn-sm">–î–µ—Ç–∞–ª–∏</button></td>
                </tr>
              ))}
            </tbody>
          </table>
        ) : (
          <div className="no-data-message">–ù–µ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —É—Å–ª—É–≥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</div>
        )}
      </div>
    </div>
  )
}

export default Dashboard 